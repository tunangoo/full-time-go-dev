// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/tunangoo/full-time-go-dev/internal/config"
	"github.com/tunangoo/full-time-go-dev/internal/handler"
	"github.com/tunangoo/full-time-go-dev/internal/middleware"
	"github.com/tunangoo/full-time-go-dev/internal/repository"
	"github.com/tunangoo/full-time-go-dev/internal/service"
	"github.com/uptrace/bun"
)

import (
	_ "github.com/tunangoo/full-time-go-dev/docs"
)

// Injectors from wire.go:

func wireApp(db *bun.DB, jwtProvider config.TokenProvider) (*handler.Handler, error) {
	userRepository := repository.NewUserRepository(db)
	userService := service.NewUserService(userRepository)
	userHandler := handler.NewUserHandler(userService)
	hotelRepository := repository.NewHotelRepository(db)
	hotelService := service.NewHotelService(hotelRepository)
	hotelHandler := handler.NewHotelHandler(hotelService)
	roomRepository := repository.NewRoomRepository(db)
	roomService := service.NewRoomService(roomRepository, hotelRepository)
	roomHandler := handler.NewRoomHandler(roomService)
	authService := service.NewAuthService(userRepository, jwtProvider)
	authHandler := handler.NewAuthHandler(userService, authService)
	jwtMiddleware := middleware.NewJWTMiddleware(jwtProvider, userRepository)
	handlerHandler := handler.NewHandler(userHandler, hotelHandler, roomHandler, authHandler, jwtMiddleware)
	return handlerHandler, nil
}
