basePath: /api
definitions:
  gin.H:
    additionalProperties: {}
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.Booking:
    properties:
      cancelled:
        type: boolean
      created_at:
        type: string
      from_date:
        type: string
      id:
        type: integer
      number_persons:
        type: integer
      room_id:
        type: integer
      till_date:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.CreateBookingRequest:
    properties:
      from_date:
        type: string
      number_persons:
        type: integer
      till_date:
        type: string
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.CreateHotelRequest:
    properties:
      location:
        maxLength: 255
        minLength: 3
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
      rating:
        maximum: 5
        minimum: 0
        type: number
    required:
    - location
    - name
    - rating
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.CreateRoomRequest:
    properties:
      base_price:
        minimum: 0
        type: number
      hotel_id:
        type: integer
      size:
        enum:
        - small
        - normal
        - kingsize
        type: string
      type:
        $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.RoomType'
    required:
    - base_price
    - hotel_id
    - size
    - type
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 255
        minLength: 3
        type: string
      last_name:
        maxLength: 255
        minLength: 3
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
      role:
        enum:
        - admin
        - user
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    - role
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse:
    properties:
      code:
        type: integer
      detail:
        type: string
      message:
        type: string
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.Hotel:
    properties:
      created_at:
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      rating:
        type: number
      rooms:
        items:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Room'
        type: array
      updated_at:
        type: string
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.LoginRequest:
    properties:
      email:
        type: string
      password:
        maxLength: 255
        minLength: 8
        type: string
    required:
    - email
    - password
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.Room:
    properties:
      base_price:
        type: number
      created_at:
        type: string
      hotel_id:
        type: integer
      id:
        type: integer
      size:
        type: string
      type:
        $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.RoomType'
      updated_at:
        type: string
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.RoomType:
    enum:
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-varnames:
    - SingleRoomType
    - DoubleRoomType
    - SeaSideRoomType
    - DeluxeRoomType
  github_com_tunangoo_full-time-go-dev_internal_model.UpdateHotelRequest:
    properties:
      location:
        maxLength: 255
        minLength: 3
        type: string
      name:
        maxLength: 255
        minLength: 3
        type: string
      rating:
        maximum: 5
        minimum: 0
        type: number
    required:
    - location
    - name
    - rating
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.UpdateRoomRequest:
    properties:
      base_price:
        minimum: 0
        type: number
      hotel_id:
        type: integer
      size:
        enum:
        - small
        - normal
        - kingsize
        type: string
      type:
        $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.RoomType'
    required:
    - base_price
    - hotel_id
    - size
    - type
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.UpdateUserRequest:
    properties:
      email:
        type: string
      first_name:
        maxLength: 255
        minLength: 3
        type: string
      last_name:
        maxLength: 255
        minLength: 3
        type: string
      role:
        enum:
        - admin
        - user
        type: string
    required:
    - email
    - first_name
    - last_name
    - role
    type: object
  github_com_tunangoo_full-time-go-dev_internal_model.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      role:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:7000
info:
  contact:
    email: support@full-time-go-dev.com
    name: API Support
  description: Full Time Go Dev API
  title: Full Time Go Dev API
  version: "1.0"
paths:
  /v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: Login user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
                user:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      summary: Login user
      tags:
      - auth
  /v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: Register user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
                user:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      summary: Register user
      tags:
      - auth
  /v1/booking/{id}:
    get:
      consumes:
      - application/json
      description: Get booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                booking:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Booking'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get booking
      tags:
      - booking
  /v1/booking/{id}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel booking
      parameters:
      - description: Booking ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Cancel booking
      tags:
      - booking
  /v1/booking/all:
    get:
      consumes:
      - application/json
      description: List all bookings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                bookings:
                  items:
                    $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Booking'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all bookings
      tags:
      - booking
  /v1/hotel:
    get:
      consumes:
      - application/json
      description: List hotels
      parameters:
      - in: query
        name: limit
        type: integer
      - in: query
        name: page
        type: integer
      - in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                hotels:
                  items:
                    $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Hotel'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List hotels
      tags:
      - hotel
  /v1/hotel/{id}:
    delete:
      consumes:
      - application/json
      description: Delete hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete hotel
      tags:
      - hotel
    get:
      consumes:
      - application/json
      description: Get hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                hotel:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Hotel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get hotel
      tags:
      - hotel
    put:
      consumes:
      - application/json
      description: Update hotel
      parameters:
      - description: Hotel ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update hotel request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.UpdateHotelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update hotel
      tags:
      - hotel
  /v1/hotel/create:
    post:
      consumes:
      - application/json
      description: Create hotel
      parameters:
      - description: Create hotel request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.CreateHotelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                hotel:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Hotel'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create hotel
      tags:
      - hotel
  /v1/room/{id}:
    delete:
      consumes:
      - application/json
      description: Delete room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete room
      tags:
      - room
    get:
      consumes:
      - application/json
      description: Get room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                room:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Room'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get room
      tags:
      - room
    put:
      consumes:
      - application/json
      description: Update room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Update room request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.UpdateRoomRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update room
      tags:
      - room
  /v1/room/{id}/book:
    post:
      consumes:
      - application/json
      description: Book room
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Book room request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.CreateBookingRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Book room
      tags:
      - room
  /v1/room/all:
    get:
      consumes:
      - application/json
      description: List all rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                rooms:
                  items:
                    $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Room'
                  type: array
                total:
                  type: integer
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: List all rooms
      tags:
      - room
  /v1/room/create:
    post:
      consumes:
      - application/json
      description: Create room
      parameters:
      - description: Create room request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.CreateRoomRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
                room:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.Room'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create room
      tags:
      - room
  /v1/user:
    delete:
      consumes:
      - application/json
      description: Delete user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Delete user
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Get user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                user:
                  $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.User'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Get user
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: Update user request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/gin.H'
            - properties:
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/github_com_tunangoo_full-time-go-dev_internal_model.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Update user
      tags:
      - user
schemes:
- http
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
